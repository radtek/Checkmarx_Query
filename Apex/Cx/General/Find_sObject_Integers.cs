CxList objects = All.FindByFileName("*.object");

// This is the list we can update with all sanitizer-types in sobjects:
string[] objTypes = {"checkbox", "currency", "date", "datetime", "email", "lookup", "masterdetail", "number", "percent", "phone"};

CxList objectTypes = objects.FindByTypes(objTypes);

CxList objectTypesRef = objectTypes;
CxList classes = objects.GetClass(objectTypes);

System.Collections.SortedList membersList = new System.Collections.SortedList();
System.Collections.SortedList classList = new System.Collections.SortedList();
foreach (CxList objType in objectTypes)
{
	CxList cl = classes.GetClass(objType);
	CSharpGraph g = objType.GetFirstGraph();
	CSharpGraph gClass = cl.GetFirstGraph();
	membersList[gClass.ShortName + "." + g.ShortName] = gClass.ShortName + "." + g.ShortName;
	classList[gClass.ShortName] = gClass.ShortName;
}

System.Collections.SortedList refList = new System.Collections.SortedList();
foreach (string cls in classList.GetKeyList())
{
	CxList ret = Find_Apex_Files().FindByType(cls).GetFathers().FindByType(typeof(ReturnStmt));
	CxList level2 = Find_Apex_Files().GetMethod(ret);
	level2 = All.FindAllReferences(level2).GetMembersOfTarget();
	refList[cls] = level2;
}

foreach (string member in membersList.GetKeyList())
{
	string gClass = member.Substring(0, member.IndexOf("."));
	string g = member.Substring(member.IndexOf(".") + 1);
	objectTypesRef.Add(All.FindByMemberAccess(member));
	objectTypesRef.Add((refList[gClass] as CxList).FindByShortName("get" + g));
}

result = objectTypesRef;

// Sanitizers in standard fields that get created on custom objects
CxList VF = Find_VF_Pages().GetTargetOfMembers().GetMembersOfTarget();
VF -= VF.FindByAssignmentSide(CxList.AssignmentSide.Left);
CxList standardFields = All.NewCxList();

standardFields.Add(VF.FindByShortName("getId", false));
standardFields.Add(VF.FindByShortName("getIsDeleted", false));
standardFields.Add(VF.FindByShortName("getCreatedById", false));
standardFields.Add(VF.FindByShortName("getCreatedDate", false));
standardFields.Add(VF.FindByShortName("getLastModifiedById", false));
standardFields.Add(VF.FindByShortName("getLastModifiedDate", false));
standardFields.Add(VF.FindByShortName("getSystemModstamp", false));
standardFields.Add(VF.FindByShortName("getLastModifiedBy", false));
standardFields.Add(VF.FindByShortName("getOwner", false));
standardFields.Add(VF.FindByShortName("getOwnerId", false));
standardFields.Add(VF.FindByShortName("getCreatedBy", false));
standardFields -= standardFields.FindByName("$*");
result.Add(standardFields);

// Here we add standard object sanitizers, using FindByMemberAccess:
//   standardObjectsSanitizers.Add(list.FindByMemberAccess("<standardObjectName>.<standardObjectField>", false));
// The "false" means case-insensitive, otherwise only the object name is insensitive, but the field is sensitive.
// Example:
//   standardObjectsSanitizers.Add(list.FindByMemberAccess("account.number", false));
// Notice, the list below is slightly optimized, to get better performance.
CxList list;
CxList letter;
CxList standardObjectsSanitizers = All.NewCxList();

CxList All_with_targets = All.GetTargetOfMembers().GetMembersOfTarget();
letter = All_with_targets.FindByShortName("a*", false);list = letter.FindByShortName("Account", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Partner.Account", false));
list = letter.FindByShortName("AccountFromId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("AccountPartner.AccountFromId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Partner.AccountFromId", false));
list = letter.FindByShortName("AccountId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("AccountContactRole.AccountId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("AccountHistory.AccountId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("AccountShare.AccountId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("AccountTeamMember.AccountId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Asset.AccountId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Case.AccountId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Contact.AccountId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Contract.AccountId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Entitlement.AccountId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Event.AccountId", false));
standardObjectsSanitizers.Add(All_with_targets.FindByMemberAccess("Opportunity.AccountId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("PartnerNetworkConnection.AccountId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("ServiceContract.AccountId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Task.AccountId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("User.AccountId", false));
list = letter.FindByShortName("AccountToId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("AccountPartner.AccountToId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpportunityPartner.AccountToId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Partner.AccountToId", false));
list = letter.FindByShortName("ActivatedById", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Contract.ActivatedById", false));
list = letter.FindByShortName("ActivatedDate", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Contract.ActivatedDate", false));
list = letter.FindByShortName("ActivationDate", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("ServiceContract.ActivationDate", false));
list = letter.FindByShortName("Active", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("AssignmentRule.Active", false));
list = letter.FindByShortName("ActivityDate", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("ActivityHistory.ActivityDate", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Event.ActivityDate", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Holiday.ActivityDate", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpenActivity.ActivityDate", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Task.ActivityDate", false));
list = letter.FindByShortName("ActivityDateTime", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Event.ActivityDateTime", false));
list = letter.FindByShortName("ActivityId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("EmailMessage.ActivityId", false));
list = letter.FindByShortName("ActorId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("ProcessInstanceHistory.ActorId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("ProcessInstanceStep.ActorId", false));
list = letter.FindByShortName("ActualCost", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Campaign.ActualCost", false));
list = letter.FindByShortName("AdminId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Site.AdminId", false));
list = letter.FindByShortName("AllowsSelfServiceLogin", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Organization.AllowsSelfServiceLogin", false));
list = letter.FindByShortName("Amount", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Opportunity.Amount", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpportunityHistory.Amount", false));
list = letter.FindByShortName("AmountAllOpportunities", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Campaign.AmountAllOpportunities", false));
list = letter.FindByShortName("AmountInherited", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("LineitemOverride.AmountInherited", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpportunityOverride.AmountInherited", false));
list = letter.FindByShortName("AmountWonOpportunities", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Campaign.AmountWonOpportunities", false));
list = letter.FindByShortName("AnnualRevenue", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Account.AnnualRevenue", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Lead.AnnualRevenue", false));
list = letter.FindByShortName("ApexClassId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("EmailServicesFunction.ApexClassId", false));
list = letter.FindByShortName("ApiVersion", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("ApexClass.ApiVersion", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("ApexComponent.ApiVersion", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("ApexPage.ApiVersion", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("ApexTrigger.ApiVersion", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("EmailTemplate.ApiVersion", false));
list = letter.FindByShortName("AssetId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("ContractLineItem.AssetId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Entitlement.AssetId", false));
list = letter.FindByShortName("assignmentRuleId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Case.assignmentRuleId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Lead.assignmentRuleId", false));
list = letter.FindByShortName("AssistantPhone", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Contact.AssistantPhone", false));
list = letter.FindByShortName("AuthenticationFailureAction", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("EmailServicesFunction.AuthenticationFailureAction", false));
list = letter.FindByShortName("AuthorID", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Document.AuthorID", false));
list = letter.FindByShortName("AuthorizationFailureAction", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("EmailServicesFunction.AuthorizationFailureAction", false));
list = letter.FindByShortName("AuthorizedSenders", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("EmailServicesFunction.AuthorizedSenders", false));
letter = All_with_targets.FindByShortName("B*", false);list = letter.FindByShortName("BestReplyId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Question.BestReplyId", false));
list = letter.FindByShortName("Birthdate", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Contact.Birthdate", false));
list = letter.FindByShortName("Body", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Idea.Body", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Idea.Body", false));
list = letter.FindByShortName("bodyCrc", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("ApexClass.bodyCrc", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("ApexTrigger.bodyCrc", false));
list = letter.FindByShortName("BodyLength", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Attachment.BodyLength", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Document.BodyLength", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("MailmergeTemplate.BodyLength", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Scontrol.BodyLength", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("StaticResource.BodyLength", false));
list = letter.FindByShortName("BrandTemplateId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("EmailTemplate.BrandTemplateId", false));
list = letter.FindByShortName("BudgetedCost", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Campaign.BudgetedCost", false));
list = letter.FindByShortName("BusinessHoursId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Entitlement.BusinessHoursId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("EntitlementTemplate.BusinessHoursId", false));
list = letter.FindByShortName("BusinessProcessId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("RecordType.BusinessProcessId", false));
letter = All_with_targets.FindByShortName("C*", false);list = letter.FindByShortName("CallCenterId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("AdditionalNumber.CallCenterId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("User.CallCenterId", false));
list = letter.FindByShortName("CallDurationInSeconds", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("ActivityHistory.CallDurationInSeconds", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpenActivity.CallDurationInSeconds", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Task.CallDurationInSeconds", false));
list = letter.FindByShortName("Campaign", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("CampaignMember.Campaign", false));
list = letter.FindByShortName("CampaignId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("CampaignMember.CampaignId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("CampaignMemberStatus.CampaignId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("CampaignShare.CampaignId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Opportunity.CampaignId", false));
list = letter.FindByShortName("CampaignMemberRecordTypeId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Campaign.CampaignMemberRecordTypeId", false));
list = letter.FindByShortName("CanAllowPortalSelfReg", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Contact.CanAllowPortalSelfReg", false));
list = letter.FindByShortName("CanSubmit", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("ForecastShare.CanSubmit", false));
list = letter.FindByShortName("CanUseQuantitySchedule", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Product2.CanUseQuantitySchedule", false));
list = letter.FindByShortName("CanUseRevenueSchedule", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Product2.CanUseRevenueSchedule", false));
list = letter.FindByShortName("CaseId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("CaseHistory.CaseId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("CaseMilestone.CaseId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("CaseShare.CaseId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("CaseSolution.CaseId", false));
list = letter.FindByShortName("CasesId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("CaseContactRole.CasesId", false));
list = letter.FindByShortName("CasesPerEntitlement", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Entitlement.CasesPerEntitlement", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("EntitlementTemplate.CasesPerEntitlement", false));
list = letter.FindByShortName("CategoryNodeId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("CategoryData.CategoryNodeId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("CategoryNodeLocalization.CategoryNodeId", false));
list = letter.FindByShortName("Closed", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("QuantityForecast.Closed", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("QuantityForecastHistory.Closed", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("RevenueForecast.Closed", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("RevenueForecastHistory.Closed", false));
list = letter.FindByShortName("CloseDate", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Opportunity.CloseDate", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpportunityHistory.CloseDate", false));
list = letter.FindByShortName("ClosedDate", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Case.ClosedDate", false));
list = letter.FindByShortName("CommentBody", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("IdeaComment.CommentBody", false));
list = letter.FindByShortName("Commit", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("QuantityForecast.Commit", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("QuantityForecastHistory.Commit", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("RevenueForecast.Commit", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("RevenueForecastHistory.Commit", false));
list = letter.FindByShortName("CommitOverridden", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("QuantityForecastHistory.CommitOverridden", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("RevenueForecastHistory.CommitOverridden", false));
list = letter.FindByShortName("CommitOverride", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("QuantityForecast.CommitOverride", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("RevenueForecast.CommitOverride", false));
list = letter.FindByShortName("CommunityId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Idea.CommunityId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Question.CommunityId", false));
list = letter.FindByShortName("CompanySignedDate", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Contract.CompanySignedDate", false));
list = letter.FindByShortName("CompanySignedId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Contract.CompanySignedId", false));
list = letter.FindByShortName("CompletionDate", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("CaseMilestone.CompletionDate", false));
list = letter.FindByShortName("ComplianceBccEmail", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Organization.ComplianceBccEmail", false));
list = letter.FindByShortName("ConnectionId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("AccountFeed.ConnectionId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("AssetFeed.ConnectionId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("CampaignFeed.ConnectionId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("CaseFeed.ConnectionId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("ContactFeed.ConnectionId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("ContractFeed.ConnectionId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("LeadFeed.ConnectionId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("NewsFeed.ConnectionId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpportunityFeed.ConnectionId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("PartnerNetworkRecordConnection.ConnectionId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Product2Feed.ConnectionId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("SolutionFeed.ConnectionId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("UserFeed.ConnectionId", false));
list = letter.FindByShortName("ConnectionReceivedId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Account.ConnectionReceivedId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Attachment.ConnectionReceivedId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Case.ConnectionReceivedId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("CaseComment.ConnectionReceivedId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Contact.ConnectionReceivedId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpportunityLineItem.ConnectionReceivedId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Product2.ConnectionReceivedId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Product2.ConnectionReceivedId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Task.ConnectionReceivedId", false));
list = letter.FindByShortName("ConnectionSentId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Account.ConnectionSentId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Attachment.ConnectionSentId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Case.ConnectionSentId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("CaseComment.ConnectionSentId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Contact.ConnectionSentId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpportunityLineItem.ConnectionSentId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Product2.ConnectionSentId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Product2.ConnectionSentId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Task.ConnectionSentId", false));
list = letter.FindByShortName("Contact", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Asset.Contact", false));
list = letter.FindByShortName("ContactId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("AccountContactRole.ContactId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Asset.ContactId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("CampaignMember.ContactId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Case.ContactId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("CaseContactRole.ContactId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("ContactHistory.ContactId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("ContactShare.ContactId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("ContractContactRole.ContactId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("EntitlementContact.ContactId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpportunityContactRole.ContactId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("PartnerNetworkConnection.ContactId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("SelfServiceUser.ContactId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("ServiceContract.ContactId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("User.ContactId", false));
list = letter.FindByShortName("ContentDocumentId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("ContentDocumentHistory.ContentDocumentId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("ContentVersion.ContentDocumentId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("ContentWorkspaceDoc.ContentDocumentId", false));
list = letter.FindByShortName("ContentModifiedById", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("ContentVersion.ContentModifiedById", false));
list = letter.FindByShortName("ContentModifiedDate", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("ContentVersion.ContentModifiedDate", false));
list = letter.FindByShortName("ContentSize", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("ContentVersion.ContentSize", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("FeedPost.ContentSize", false));
list = letter.FindByShortName("ContentVersionId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("ContentVersionHistory.ContentVersionId", false));
list = letter.FindByShortName("ContentWorkspaceId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("ContentWorkspaceDoc.ContentWorkspaceId", false));
list = letter.FindByShortName("ContractId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("ContractContactRole.ContractId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("ContractHistory.ContractId", false));
list = letter.FindByShortName("ContractLineItemID", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("ContractLineItemHistory.ContractLineItemID", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Entitlement.ContractLineItemId", false));
list = letter.FindByShortName("ContractTerm", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Contract.ContractTerm", false));
list = letter.FindByShortName("ConversionRate", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("CurrencyType.ConversionRate", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("DatedConversionRate.ConversionRate", false));
list = letter.FindByShortName("ConvertedAccountId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Lead.ConvertedAccountId", false));
list = letter.FindByShortName("ConvertedContactId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Lead.ConvertedContactId", false));
list = letter.FindByShortName("ConvertedDate", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Lead.ConvertedDate", false));
list = letter.FindByShortName("ConvertedOpportunityId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Lead.ConvertedOpportunityId", false));
list = letter.FindByShortName("CreatedById", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("CallCenter.CreatedById", false));
list = letter.FindByShortName("CreatedDate", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("CallCenter.CreatedDate", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("PartnerNetworkConnection.CreatedDate", false));
list = letter.FindByShortName("CurrencyIsoCode", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("RevenueForecast.CurrencyIsoCode", false));
list = letter.FindByShortName("CustomerSignedDate", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Contract.CustomerSignedDate", false));
list = letter.FindByShortName("CustomerSignedId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Contract.CustomerSignedId", false));
letter = All_with_targets.FindByShortName("D*", false);list = letter.FindByShortName("DailyBandwidthLimit", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Site.DailyBandwidthLimit", false));
list = letter.FindByShortName("DailyBandwidthUsed", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Site.DailyBandwidthUsed", false));
list = letter.FindByShortName("DailyRequestTimeLimit", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Site.DailyRequestTimeLimit", false));
list = letter.FindByShortName("DailyRequestTimeUsed", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Site.DailyRequestTimeUsed", false));
list = letter.FindByShortName("DailyWebToCaseCount", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Organization.DailyWebToCaseCount", false));
list = letter.FindByShortName("DailyWebToCaseLimit", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Organization.DailyWebToCaseLimit", false));
list = letter.FindByShortName("DailyWebToLeadCount", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Organization.DailyWebToLeadCount", false));
list = letter.FindByShortName("DailyWebToLeadLimit", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Organization.DailyWebToLeadLimit", false));
list = letter.FindByShortName("DecimalPlaces", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("CurrencyType.DecimalPlaces", false));
list = letter.FindByShortName("DefaultPrice", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Product2.DefaultPrice", false));
list = letter.FindByShortName("DefaultProbability", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpportunityStage.DefaultProbability", false));
list = letter.FindByShortName("DefaultRecordTypeId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("ContentWorkspace.DefaultRecordTypeId", false));
list = letter.FindByShortName("DefaultRollupCommit", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("QuantityForecast.DefaultRollupCommit", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("RevenueForecast.DefaultRollupCommit", false));
list = letter.FindByShortName("DefaultRollupUpside", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("QuantityForecast.DefaultRollupUpside", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("RevenueForecast.DefaultRollupUpside", false));
list = letter.FindByShortName("DelegatedApproverId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("User.DelegatedApproverId", false));
list = letter.FindByShortName("Discount", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("ContractLineItem.Discount", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpportunityLineItem.Discount", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("ServiceContract.Discount", false));
list = letter.FindByShortName("DocumentId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("DocumentAttachmentMap.DocumentId", false));
list = letter.FindByShortName("DocumentSequence", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("DocumentAttachmentMap.DocumentSequence", false));
list = letter.FindByShortName("DoesIncludeBosses", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Group.DoesIncludeBosses", false));
list = letter.FindByShortName("DoesSendEmailToMembers", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Group.DoesSendEmailToMembers", false));
list = letter.FindByShortName("DownVotes", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Reply.DownVotes", false));
list = letter.FindByShortName("DurationInMinutes", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("ActivityHistory.DurationInMinutes", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Event.DurationInMinutes", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpenActivity.DurationInMinutes", false));
letter = All_with_targets.FindByShortName("E*", false);list = letter.FindByShortName("ElapsedTimeInDays", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("CaseMilestone.ElapsedTimeInDays", false));
list = letter.FindByShortName("ElapsedTimeInHrs", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("CaseMilestone.ElapsedTimeInHrs", false));
list = letter.FindByShortName("ElapsedTimeInMins", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("CaseMilestone.ElapsedTimeInMins", false));
list = letter.FindByShortName("Email", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Contact.Email", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Group.Email", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Lead.Email", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("SelfServiceUser.Email", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("User.Email", false));
list = letter.FindByShortName("EmailBouncedDate", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Contact.EmailBouncedDate", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Lead.EmailBouncedDate", false));
list = letter.FindByShortName("EmailTemplate", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("DocumentAttachmentMap.EmailTemplate", false));
list = letter.FindByShortName("EndDate", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Campaign.EndDate", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Contract.EndDate", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("ContractLineItem.EndDate", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Entitlement.EndDate", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("PartnerNetworkRecordConnection.EndDate", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Period.EndDate", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("ServiceContract.EndDate", false));
list = letter.FindByShortName("EndDateTime", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Event.EndDateTime", false));
list = letter.FindByShortName("EndTime", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("CronTrigger.EndTime", false));
list = letter.FindByShortName("EndTimeInMinutes", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Holiday.EndTimeInMinutes", false));
list = letter.FindByShortName("EntitlementId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("EntitlementContact.EntitlementId", false));
list = letter.FindByShortName("ErrorRoutingAddress", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("EmailServicesFunction.ErrorRoutingAddress", false));
list = letter.FindByShortName("ExpectedResponse", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Campaign.ExpectedResponse", false));
list = letter.FindByShortName("ExpectedRevenue", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Campaign.ExpectedRevenue", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Opportunity.ExpectedRevenue", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpportunityHistory.ExpectedRevenue", false));
list = letter.FindByShortName("Extension", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("User.Extension", false));
letter = All_with_targets.FindByShortName("F*", false);list = letter.FindByShortName("Fax", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Account.Fax", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Contact.Fax", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Lead.Fax", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Organization.Fax", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("User.Fax", false));
list = letter.FindByShortName("FeaturedContentBoost", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("ContentVersion.FeaturedContentBoost", false));
list = letter.FindByShortName("FeaturedContentDate", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("ContentVersion.FeaturedContentDate", false));
list = letter.FindByShortName("FeedItemId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("FeedComment.FeedItemId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("FeedPost.FeedItemId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("FeedTrackedChange.FeedItemId", false));
list = letter.FindByShortName("FeedPostId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("AccountFeed.FeedPostId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("AssetFeed.FeedPostId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("CampaignFeed.FeedPostId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("CaseFeed.FeedPostId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("ContactFeed.FeedPostId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("ContractFeed.FeedPostId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("LeadFeed.FeedPostId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("NewsFeed.FeedPostId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpportunityFeed.FeedPostId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Product2Feed.FeedPostId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("SolutionFeed.FeedPostId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("UserFeed.FeedPostId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("UserProfileFeed.FeedPostId", false));
list = letter.FindByShortName("FirstOpenDate", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("EmailStatus.FirstOpenDate", false));
list = letter.FindByShortName("FirstPublishLocationId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("ContentVersion.FirstPublishLocationId", false));
list = letter.FindByShortName("FirstRespondedDate", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("CampaignMember.FirstRespondedDate", false));
list = letter.FindByShortName("FiscalQuarter", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Opportunity.FiscalQuarter", false));
list = letter.FindByShortName("FiscalYear", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Opportunity.FiscalYear", false));
list = letter.FindByShortName("FiscalYearStartMonth", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Organization.FiscalYearStartMonth", false));
list = letter.FindByShortName("FolderId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Document.FolderId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("EmailTemplate.FolderId", false));
list = letter.FindByShortName("ForecastCategoryInherited", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("LineitemOverride.ForecastCategoryInherited", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpportunityOverride.ForecastCategoryInherited", false));
list = letter.FindByShortName("ForecastEnabled", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("User.ForecastEnabled", false));
list = letter.FindByShortName("ForecastOverrideId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("QuantityForecastHistory.ForecastOverrideId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("RevenueForecastHistory.ForecastOverrideId", false));
list = letter.FindByShortName("ForecastUserId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Territory.ForecastUserId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("UserRole.ForecastUserId", false));
list = letter.FindByShortName("FridayEndTime", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("BusinessHours.FridayEndTime", false));
list = letter.FindByShortName("FridayStartTime", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("BusinessHours.FridayStartTime", false));
list = letter.FindByShortName("FromAddress", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("EmailMessage.FromAddress", false));
list = letter.FindByShortName("FromId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Bookmark.FromId", false));
list = letter.FindByShortName("FunctionId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("EmailServicesAddress.FunctionId", false));
letter = All_with_targets.FindByShortName("G*", false);list = letter.FindByShortName("GrandTotal", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("ServiceContract.GrandTotal", false));
list = letter.FindByShortName("GroupId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("AccountOwnerSharingRule.GroupId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("AccountTerritorySharingRule.GroupId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("CampaignOwnerSharingRule.GroupId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("CaseOwnerSharingRule.GroupId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("ContactOwnerSharingRule.GroupId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("GroupMember.GroupId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("LeadOwnerSharingRule.GroupId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpportunityOwnerSharingRule.GroupId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("ServiceContractOwnerSharingRule.GroupId", false));
letter = All_with_targets.FindByShortName("H*", false);list = letter.FindByShortName("HasAttachment", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("EmailMessage.HasAttachment", false));
list = letter.FindByShortName("HasCommentsUnreadByOwner", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Case.HasCommentsUnreadByOwner", false));
list = letter.FindByShortName("HasMenubar", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("WebLink.HasMenubar", false));
list = letter.FindByShortName("HasOpportunityLineItem", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Opportunity.HasOpportunityLineItem", false));
list = letter.FindByShortName("HasOptedOutofEmail", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Contact.HasOptedOutofEmail", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Lead.HasOptedOutOfEmail", false));
list = letter.FindByShortName("HasQuantitySchedule", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpportunityLineItem.HasQuantitySchedule", false));
list = letter.FindByShortName("HasResponded", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("CampaignMember.HasResponded", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("CampaignMemberStatus.HasResponded", false));
list = letter.FindByShortName("HasRevenueSchedule", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpportunityLineItem.HasRevenueSchedule", false));
list = letter.FindByShortName("HasScrollbars", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("WebLink.HasScrollbars", false));
list = letter.FindByShortName("HasSelfServiceComments", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Case.HasSelfServiceComments", false));
list = letter.FindByShortName("HasToolbar", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("WebLink.HasToolbar", false));
list = letter.FindByShortName("Height", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("WebLink.Height", false));
list = letter.FindByShortName("HierarchyActualCost", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Campaign.HierarchyActualCost", false));
list = letter.FindByShortName("HierarchyBudgetedCost", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Campaign.HierarchyBudgetedCost", false));
list = letter.FindByShortName("HierarchyExpectedRevenue", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Campaign.HierarchyExpectedRevenue", false));
list = letter.FindByShortName("HierarchyNumberSent", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Campaign.HierarchyNumberSent", false));
list = letter.FindByShortName("HomePhone", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Contact.HomePhone", false));
letter = All_with_targets.FindByShortName("I*", false);list = letter.FindByShortName("ID", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Bookmark.ID", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("CallCenter.Id", false));
list = letter.FindByShortName("IdeaId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("IdeaComment.IdeaId", false));
list = letter.FindByShortName("Incoming", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("EmailMessage.Incoming", false));
list = letter.FindByShortName("InstallDate", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Asset.InstallDate", false));
list = letter.FindByShortName("InvalidationDate", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("QuantityForecast.InvalidationDate", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("RevenueForecast.InvalidationDate", false));
list = letter.FindByShortName("IsActive", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("AccountTerritoryAssignmentRule.IsActive", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("BrandTemplate.IsActive", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("BusinessHours.IsActive", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("BusinessProcess.IsActive", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Campaign.IsActive", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Community.IsActive", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("CurrencyType.IsActive", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Division.IsActive", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("EmailServicesAddress.IsActive", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("EmailServicesFunction.IsActive", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("EmailTemplate.IsActive", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Name.IsActive", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpportunityStage.IsActive", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Pricebook2.IsActive", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("PricebookEntry.IsActive", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Product2.IsActive", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("RecordType.IsActive", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("SelfServiceUser.IsActive", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("User.IsActive", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("UserTerritory.IsActive", false));
list = letter.FindByShortName("IsAllDay", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Holiday.IsAllDay", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Holiday.IsAllDay", false));
list = letter.FindByShortName("IsAllDayEvent", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("ActivityHistory.IsAllDayEvent", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Event.IsAllDayEvent", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpenActivity.IsAllDayEvent", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpenActivity.IsAllDayEvent", false));
list = letter.FindByShortName("IsAllowAllProfiles", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("OrgWideEmailAddress.IsAllowAllProfiles", false));
list = letter.FindByShortName("IsArchived", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Event.IsArchived", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Task.IsArchived", false));
list = letter.FindByShortName("IsAuthenticationRequired", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("EmailServicesFunction.IsAuthenticationRequired", false));
list = letter.FindByShortName("IsBodySearchable", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Document.IsBodySearchable", false));
list = letter.FindByShortName("IsChild", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Event.IsChild", false));
list = letter.FindByShortName("IsClosed", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("ActivityHistory.IsClosed", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Case.IsClosed", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("CaseStatus.isClosed", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpenActivity.IsClosed", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Opportunity.IsClosed", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpportunityStage.IsClosed", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Task.IsClosed", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("TaskStatus.IsClosed", false));
list = letter.FindByShortName("IsClosedOnCreate", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Case.IsClosedOnCreate", false));
list = letter.FindByShortName("IsCompetitorProduct", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Asset.IsCompetitorProduct", false));
list = letter.FindByShortName("IsCompleted", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("CaseMilestone.IsCompleted", false));
list = letter.FindByShortName("IsConverted", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Lead.IsConverted", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("LeadStatus.IsConverted", false));
list = letter.FindByShortName("IsCorporate", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("CurrencyType.IsCorporate", false));
list = letter.FindByShortName("IsCustomerPortal", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Account.IsCustomerPortal", false));
list = letter.FindByShortName("IsDefault", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("BusinessHours.IsDefault", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("CampaignMemberStatus.IsDefault", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("CaseStatus.IsDefault", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("ContractStatus.IsDefault", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("LeadStatus.IsDefault", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("SolutionStatus.IsDefault", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("TaskPriority.IsDefault", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("TaskStatus.IsDefault", false));
list = letter.FindByShortName("IsDeleted", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Account.IsDeleted", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("AccountContactRole.IsDeleted", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("AccountHistory.IsDeleted", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("AccountPartner.IsDeleted", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("AccountShare.IsDeleted", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("AccountTeamMember.IsDeleted", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("ActivityHistory.IsDeleted", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Approval.IsDeleted", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Bookmark.IsDeleted", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("CampaignMemberStatus.IsDeleted", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Case.IsDeleted", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("CaseComment.IsDeleted", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("CaseContactRole.IsDeleted", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("CaseHistory.IsDeleted", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("CaseShare.IsDeleted", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("CaseSolution.IsDeleted", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("CategoryData.IsDeleted", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Contact.IsDeleted", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("ContactHistory.IsDeleted", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("ContactShare.IsDeleted", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Contract.IsDeleted", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("ContractContactRole.IsDeleted", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("ContractHistory.IsDeleted", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("ContractLineItemHistory.IsDeleted", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Document.IsDeleted", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("EmailMessage.IsDeleted", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("EntitlementContact.IsDeleted", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("EntitlementHistory.IsDeleted", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("EntityHistory.IsDeleted", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Idea.IsDeleted", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Lead.IsDeleted", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("LeadHistory.IsDeleted", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("LeadShare.IsDeleted", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("LineitemOverride.IsDeleted", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("MailmergeTemplate.IsDeleted", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Note.IsDeleted", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("NoteAndAttachment.IsDeleted", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpenActivity.IsDeleted", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Opportunity.IsDeleted", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpportunityCompetitor.IsDeleted", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpportunityContactRole.IsDeleted", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpportunityFieldHistory.IsDeleted", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpportunityHistory.IsDeleted", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpportunityLineItemSchedule.IsDeleted", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpportunityOverride.IsDeleted", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpportunityPartner.IsDeleted", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpportunityShare.IsDeleted", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpportunityTeamMember.IsDeleted", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Partner.IsDeleted", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Pricebook2.IsDeleted", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("PricebookEntry.IsDeleted", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("ProcessInstance.IsDeleted", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("ProcessInstanceHistory.IsDeleted", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Product2.IsDeleted", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("SelfServiceUser.IsDeleted", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("ServiceContract.IsDeleted", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("ServiceContractHistory.IsDeleted", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Solution.IsDeleted", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("SolutionHistory.IsDeleted", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("UserTerritory.IsDeleted", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Vote.IsDeleted", false));
list = letter.FindByShortName("IsErrorRoutingEnabled", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("EmailServicesFunction.IsErrorRoutingEnabled", false));
list = letter.FindByShortName("IsEscalated", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Case.IsEscalated", false));
list = letter.FindByShortName("IsForecastPeriod", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Period.IsForecastPeriod", false));
list = letter.FindByShortName("IsGlobalDivision", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Division.IsGlobalDivision", false));
list = letter.FindByShortName("IsGroupEvent", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Event.IsGroupEvent", false));
list = letter.FindByShortName("IsHighPriority", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("TaskPriority.IsHighPriority", false));
list = letter.FindByShortName("IsHTML", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Idea.IsHTML", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("IdeaComment.IsHTML", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Solution.IsHtml", false));
list = letter.FindByShortName("IsInherited", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("AccountTerritoryAssignmentRule.IsInherited", false));
list = letter.FindByShortName("IsInternalUseOnly", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Document.IsInternalUseOnly", false));
list = letter.FindByShortName("IsLatest", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("ContentVersion.IsLatest", false));
list = letter.FindByShortName("IsLocked", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Idea.IsLocked", false));
list = letter.FindByShortName("IsNote", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("NoteAndAttachment.IsNote", false));
list = letter.FindByShortName("IsOnlineMeeting", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("ActivityHistory.IsOnlineMeeting", false));
list = letter.FindByShortName("IsOutOfDate", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Solution.IsOutOfDate", false));
list = letter.FindByShortName("IsOwner", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("ContentWorkspaceDoc.IsOwner", false));
list = letter.FindByShortName("IsPartner", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Account.IsPartner", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("User.IsPartner", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("UserRole.IsPartner", false));
list = letter.FindByShortName("IsPartnerShared", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Attachment.IsPartnerShared", false));
list = letter.FindByShortName("IsPending", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("ProcessInstanceHistory.IsPending", false));
list = letter.FindByShortName("IsPerIncident", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Entitlement.IsPerIncident", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("EntitlementTemplate.IsPerIncident", false));
list = letter.FindByShortName("IsPersonAccount", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Account.IsPersonAccount", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Contact.IsPersonAccount", false));
list = letter.FindByShortName("IsPersonType", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("RecordType.IsPersonType", false));
list = letter.FindByShortName("IsPortalEnabled", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("User.IsPortalEnabled", false));
list = letter.FindByShortName("IsPortalSelfRegistered", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("User.IsPortalSelfRegistered", false));
list = letter.FindByShortName("IsPrimary", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("AccountContactRole.IsPrimary", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("AccountPartner.IsPrimary", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("ContractContactRole.IsPrimary", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpportunityContactRole.IsPrimary", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpportunityPartner.IsPrimary", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Partner.IsPrimary", false));
list = letter.FindByShortName("IsPrivate", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Attachment.IsPrivate", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Event.IsPrivate", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Note.IsPrivate", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("NoteAndAttachment.IsPrivate", false));
list = letter.FindByShortName("IsProtected", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("WebLink.IsProtected", false));
list = letter.FindByShortName("IsPublic", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Document.IsPublic", false));
list = letter.FindByShortName("IsPublished", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("CaseComment.IsPublished", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Solution.IsPublished", false));
list = letter.FindByShortName("IsPublishedInPublicKb", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Solution.IsPublishedInPublicKb", false));
list = letter.FindByShortName("IsReadOnly", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Folder.IsReadOnly", false));
list = letter.FindByShortName("IsRecurrence", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Event.IsRecurrence", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Holiday.IsRecurrence", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Task.IsRecurrence", false));
list = letter.FindByShortName("IsReminderSet", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Event.IsReminderSet", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Task.IsReminderSet", false));
list = letter.FindByShortName("IsResizable", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("WebLink.IsResizable", false));
list = letter.FindByShortName("IsRestrictContentTypes", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("ContentWorkspace.IsRestrictContentTypes", false));
list = letter.FindByShortName("IsRestrictLinkedContentTypes", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("ContentWorkspace.IsRestrictLinkedContentTypes", false));
list = letter.FindByShortName("IsReviewed", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Solution.IsReviewed", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("SolutionStatus.IsReviewed", false));
list = letter.FindByShortName("IsSelfServiceClosed", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Case.IsSelfServiceClosed", false));
list = letter.FindByShortName("IsStandard", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Pricebook2.IsStandard", false));
list = letter.FindByShortName("IsStandardYear", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("FiscalYearSettings.IsStandardYear", false));
list = letter.FindByShortName("IsStopped", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Case.IsStopped", false));
list = letter.FindByShortName("IsTask", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("ActivityHistory.IsTask", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpenActivity.IsTask", false));
list = letter.FindByShortName("IsTextAttachmentsAsBinary", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("EmailServicesFunction.IsTextAttachmentsAsBinary", false));
list = letter.FindByShortName("IsTextTruncated", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("EmailServicesFunction.IsTextTruncated", false));
list = letter.FindByShortName("IsTlsRequired", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("EmailServicesFunction.IsTlsRequired", false));
list = letter.FindByShortName("IsUnreadByOwner", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Lead.IsUnreadByOwner", false));
list = letter.FindByShortName("IsValid", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("ApexClass.IsValid", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("ApexTrigger.IsValid", false));
list = letter.FindByShortName("IsViolated", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("CaseMilestone.IsViolated", false));
list = letter.FindByShortName("IsVisibleInSelfService", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("ActivityHistory.IsVisibleInSelfService", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Case.IsVisibleInSelfService", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Event.IsVisibleInSelfService", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpenActivity.IsVisibleInSelfService", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Task.IsVisibleInSelfService", false));
list = letter.FindByShortName("IsWon", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Opportunity.IsWon", false));
list = letter.FindByShortName("ItemId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("AccountTag.ItemId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("AssetTag.ItemId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("CampaignTag.ItemId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("CaseTag.ItemId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("ContactTag.ItemId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("ContractTag.ItemId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("DocumentTag.ItemId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("LeadTag.ItemId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("NoteTag.ItemId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpportunityTag.ItemId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("SolutionTag.ItemId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("TaskTag.ItemId", false));
letter = All_with_targets.FindByShortName("L*", false);list = letter.FindByShortName("LastActivityDate", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Account.LastActivityDate", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Campaign.LastActivityDate", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Contact.LastActivityDate", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Contract.LastActivityDate", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Lead.LastActivityDate", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Opportunity.LastActivityDate", false));
list = letter.FindByShortName("LastApprovedDate", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Contract.LastApprovedDate", false));
list = letter.FindByShortName("LastCommentDate", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Idea.LastCommentDate", false));
list = letter.FindByShortName("LastCommentId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Idea.LastCommentId", false));
list = letter.FindByShortName("LastCURequestDate", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Contact.LastCURequestDate", false));
list = letter.FindByShortName("LastCUUpdateDate", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Contact.LastCUUpdateDate", false));
list = letter.FindByShortName("LastLoginDate", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("SelfServiceUser.LastLoginDate", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("User.LastLoginDate", false));
list = letter.FindByShortName("LastModifiedById", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("CallCenter.LastModifiedById", false));
list = letter.FindByShortName("LastModifiedDate", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("CallCenter.LastModifiedDate", false));
list = letter.FindByShortName("LastReplyDate", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Question.LastReplyDate", false));
list = letter.FindByShortName("LastReplyId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Question.LastReplyId", false));
list = letter.FindByShortName("LastUsedDate", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("EmailTemplate.LastUsedDate", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("MailmergeTemplate.LastUsedDate", false));
list = letter.FindByShortName("LastWebToCaseDate", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Organization.LastWebToCaseDate", false));
list = letter.FindByShortName("LastWebToLeadDate", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Organization.LastWebToLeadDate", false));
list = letter.FindByShortName("LatestPublishedVersionID", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("ContentDocument.LatestPublishedVersionID", false));
list = letter.FindByShortName("LeadId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("CampaignMember.LeadId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("LeadHistory.LeadId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("LeadShare.LeadId", false));
list = letter.FindByShortName("LengthWithoutComments", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("ApexClass.LengthWithoutComments", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("ApexTrigger.LengthWithoutComments", false));
list = letter.FindByShortName("LineItemCount", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("ServiceContract.LineItemCount", false));
list = letter.FindByShortName("ListPrice", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("ContractLineItem.ListPrice", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpportunityLineItem.ListPrice", false));
list = letter.FindByShortName("LocalRecordID", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("PartnerNetworkRecordConnection.LocalRecordID", false));
letter = All_with_targets.FindByShortName("M*", false);list = letter.FindByShortName("ManagerClosed", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("QuantityForecast.ManagerClosed", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("RevenueForecast.ManagerClosed", false));
list = letter.FindByShortName("ManagerCommit", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("QuantityForecast.ManagerCommit", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("RevenueForecast.ManagerCommit", false));
list = letter.FindByShortName("ManagerCommitOverride", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("QuantityForecast.ManagerCommitOverride", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("RevenueForecast.ManagerCommitOverride", false));
list = letter.FindByShortName("ManagerDefaultRollupCommit", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("QuantityForecast.ManagerDefaultRollupCommit", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("RevenueForecast.ManagerDefaultRollupCommit", false));
list = letter.FindByShortName("ManagerDefaultRollupUpside", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("QuantityForecast.ManagerDefaultRollupUpside", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("RevenueForecast.ManagerDefaultRollupUpside", false));
list = letter.FindByShortName("ManagerId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("QuantityForecast.ManagerId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("RevenueForecast.ManagerId", false));
list = letter.FindByShortName("ManagerOpportunityRollupCommit", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("RevenueForecast.ManagerOpportunityRollupCommit", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("QuantityForecast.ManagerOpportunityRollupCommit", false));
list = letter.FindByShortName("ManagerOpportunityRollupUpside", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("RevenueForecast.ManagerOpportunityRollupUpside", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("QuantityForecast.ManagerOpportunityRollupUpside", false));
list = letter.FindByShortName("ManagerPipeline", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("QuantityForecast.ManagerPipeline", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("RevenueForecast.ManagerPipeline", false));
list = letter.FindByShortName("ManagerTerritoryId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("RevenueForecast.ManagerTerritoryId", false));
list = letter.FindByShortName("ManagerUpside", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("QuantityForecast.ManagerUpside", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("RevenueForecast.ManagerUpside", false));
list = letter.FindByShortName("ManagerUpsideOverride", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("QuantityForecast.ManagerUpsideOverride", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("RevenueForecast.ManagerUpsideOverride", false));
list = letter.FindByShortName("MasterRecordId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Account.MasterRecordId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Contact.MasterRecordId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Lead.masterRecordId", false));
list = letter.FindByShortName("MaxActionsPerRule", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Organization.MaxActionsPerRule", false));
list = letter.FindByShortName("MaxRulesPerEntity", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Organization.MaxRulesPerEntity", false));
list = letter.FindByShortName("MayForecastManagerShare", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Territory.MayForecastManagerShare", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("UserRole.MayForecastManagerShare", false));
list = letter.FindByShortName("MemberId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("CaseTeamMember.MemberId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("CaseTeamTemplateMember.MemberId", false));
list = letter.FindByShortName("MessageDate", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("EmailMessage.MessageDate", false));
list = letter.FindByShortName("MilestoneTypeId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("CaseMilestone.MilestoneTypeId", false));
list = letter.FindByShortName("MobilePhone", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Contact.MobilePhone", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Lead.MobilePhone", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("User.MobilePhone", false));
list = letter.FindByShortName("MondayEndTime", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("BusinessHours.MondayEndTime", false));
list = letter.FindByShortName("MondayStartTime", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("BusinessHours.MondayStartTime", false));
list = letter.FindByShortName("MonthlyPageViewsEntitlement", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Organization.MonthlyPageViewsEntitlement", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Site.MonthlyPageViewsEntitlement", false));
list = letter.FindByShortName("MonthlyPageViewsUsed", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Organization.MonthlyPageViewsUsed", false));
letter = All_with_targets.FindByShortName("N*", false);list = letter.FindByShortName("NegativeRatingCount", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("ContentVersion.NegativeRatingCount", false));
list = letter.FindByShortName("NextFireTime", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("CronTrigger.NextFireTime", false));
list = letter.FindByShortName("NextStartDate", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("DatedConversionRate.NextStartDate", false));
list = letter.FindByShortName("Number", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Period.Number", false));
list = letter.FindByShortName("NumberOfContacts", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Campaign.NumberOfContacts", false));
list = letter.FindByShortName("NumberOfConvertedLeads", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Campaign.NumberOfConvertedLeads", false));
list = letter.FindByShortName("NumberOfEmployees", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Account.NumberOfEmployees", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Lead.NumberOfEmployees", false));
list = letter.FindByShortName("NumberOfLeads", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Campaign.NumberOfLeads", false));
list = letter.FindByShortName("NumberOfOpportunities", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Campaign.NumberOfOpportunities", false));
list = letter.FindByShortName("NumberOfQuantityInstallments", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Product2.NumberOfQuantityInstallments", false));
list = letter.FindByShortName("NumberOfResponses", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Campaign.NumberOfResponses", false));
list = letter.FindByShortName("NumberofRevenueInstallments", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Product2.NumberofRevenueInstallments", false));
list = letter.FindByShortName("NumberOfWonOpportunities", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Campaign.NumberOfWonOpportunities", false));
list = letter.FindByShortName("NumberSent", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Campaign.NumberSent", false));
list = letter.FindByShortName("NumComments", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Idea.NumComments", false));
list = letter.FindByShortName("NumReplies", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Question.NumReplies", false));
letter = All_with_targets.FindByShortName("O*", false);list = letter.FindByShortName("OfflineTrialExpirationDate", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("User.OfflineTrialExpirationDate", false));
list = letter.FindByShortName("Opportunity", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Opportunity.Opportunity", false));
list = letter.FindByShortName("OpportunityId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("LineitemOverride.OpportunityId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpportunityCompetitor.OpportunityID", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpportunityContactRole.OpportunityId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpportunityFieldHistory.OpportunityId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpportunityHistory.OpportunityId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpportunityLineItem.OpportunityId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpportunityOverride.OpportunityId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpportunityPartner.OpportunityId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpportunityShare.OpportunityId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpportunityTeamMember.OpportunityId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Partner.OpportunityId", false));
list = letter.FindByShortName("OpportunityLineItemId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("LineitemOverride.OpportunityLineItemId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpportunityLineItemSchedule.OpportunityLineItemId", false));
list = letter.FindByShortName("OpportunityPartner", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Partner.OpportunityPartner", false));
list = letter.FindByShortName("OpportunityRollupClosed", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("QuantityForecast.OpportunityRollupClosed", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("RevenueForecast.OpportunityRollupClosed", false));
list = letter.FindByShortName("OpportunityRollupCommit", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("QuantityForecast.OpportunityRollupCommit", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("RevenueForecast.OpportunityRollupCommit", false));
list = letter.FindByShortName("OpportunityRollupPipeline", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("QuantityForecast.OpportunityRollupPipeline", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("RevenueForecast.OpportunityRollupPipeline", false));
list = letter.FindByShortName("OpportunityRollupUpside", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("QuantityForecast.OpportunityRollupUpside", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("RevenueForecast.OpportunityRollupUpside", false));
list = letter.FindByShortName("OptionsAllowHomePage", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Site.OptionsAllowHomePage", false));
list = letter.FindByShortName("OptionsAllowStandardIdeasPages", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Site.OptionsAllowStandardIdeasPages", false));
list = letter.FindByShortName("OptionsAllowStandardLookups", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Site.OptionsAllowStandardLookups", false));
list = letter.FindByShortName("OptionsAllowStandardSearch", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Site.OptionsAllowStandardSearch", false));
list = letter.FindByShortName("OptionsEnableFeeds", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Site.OptionsEnableFeeds", false));
list = letter.FindByShortName("OriginalActorId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("ProcessInstanceHistory.OriginalActorId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("ProcessInstanceStep.OriginalActorId", false));
list = letter.FindByShortName("OtherPhone", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Contact.OtherPhone", false));
list = letter.FindByShortName("OutOfDate", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpportunityOverride.OutOfDate", false));
list = letter.FindByShortName("OverrideAmount", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("LineitemOverride.OverrideAmount", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpportunityOverride.OverrideAmount", false));
list = letter.FindByShortName("OverridePeriodId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpportunityOverride.OverridePeriodId", false));
list = letter.FindByShortName("OverrideQuantity", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("LineitemOverride.OverrideQuantity", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpportunityOverride.OverrideQuantity", false));
list = letter.FindByShortName("OverrideUnitPrice", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("LineitemOverride.OverrideUnitPrice", false));
list = letter.FindByShortName("OwnerId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Account.OwnerId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("ActivityHistory.OwnerId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Approval.OwnerId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Attachment.OwnerId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Campaign.OwnerId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Case.OwnerId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Contact.OwnerId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("ContentDocument.OwnerId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("ContentVersion.OwnerId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Contract.OwnerId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("EmailTemplate.OwnerId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Event.OwnerId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Group.OwnerId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Lead.OwnerId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("LineitemOverride.OwnerId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Note.OwnerId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("NoteAndAttachment.OwnerId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpenActivity.OwnerId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Opportunity.OwnerId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpportunityOverride.OwnerId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("QuantityForecast.OwnerId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("RevenueForecast.OwnerId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("ServiceContract.OwnerId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Solution.OwnerId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Task.OwnerId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("UserAccountTeamMember.OwnerId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("UserTeamMember.OwnerId", false));
letter = All_with_targets.FindByShortName("P*", false);list = letter.FindByShortName("ParentCampaign", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Campaign.ParentCampaign", false));
list = letter.FindByShortName("ParentId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Account.ParentId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("AccountFeed.ParentId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Approval.ParentId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("AssetFeed.ParentId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Attachment.ParentId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("CampaignFeed.ParentId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Case.ParentId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("CaseComment.ParentId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("CaseFeed.ParentId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("CaseTeamMember.ParentId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("CaseTeamTemplateRecord.ParentId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("CategoryNode.ParentId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("ContactFeed.ParentId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("ContractFeed.ParentId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("DivisionLocalization.ParentId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("DocumentAttachmentMap.ParentId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("EmailMessage.ParentId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("EntityHistory.ParentId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("EntitySubscription.ParentId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("FeedComment.ParentId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("FeedPost.ParentId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("LeadFeed.ParentId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("NewsFeed.ParentId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Note.ParentId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("NoteAndAttachment.ParentId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpportunityFeed.ParentId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Product2Feed.ParentId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("RecordTypeLocalization.ParentId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("ServiceContractShare.ParentId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Solution.ParentId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("SolutionFeed.ParentId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("UserFeed.ParentId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("UserProfileFeed.ParentId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Vote.ParentId", false));
list = letter.FindByShortName("ParentIdeaID", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Idea.ParentIdeaID", false));
list = letter.FindByShortName("ParentRecordID", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("PartnerNetworkRecordConnection.ParentRecordID", false));
list = letter.FindByShortName("ParentRoleId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("UserRole.ParentRoleId", false));
list = letter.FindByShortName("ParentTerritoryID", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Territory.ParentTerritoryID", false));
list = letter.FindByShortName("PartnerAccountId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Lead.PartnerAccountId", false));
list = letter.FindByShortName("PartnerRecordID", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("PartnerNetworkRecordConnection.PartnerRecordID", false));
list = letter.FindByShortName("PeriodId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("FiscalYearSettings.PeriodId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("QuantityForecast.PeriodId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("RevenueForecast.PeriodId", false));
list = letter.FindByShortName("PeriodInherited", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpportunityOverride.PeriodInherited", false));
list = letter.FindByShortName("PermissionName", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Profile.PermissionName", false));
list = letter.FindByShortName("PersonAssistantPhone", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Account.PersonAssistantPhone", false));
list = letter.FindByShortName("PersonBirthDate", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Account.PersonBirthDate", false));
list = letter.FindByShortName("PersonContactId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Account.PersonContactId", false));
list = letter.FindByShortName("PersonEmail", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Account.PersonEmail", false));
list = letter.FindByShortName("PersonEmailBouncedDate", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Account.PersonEmailBouncedDate", false));
list = letter.FindByShortName("PersonHasOptedOutOfEmail", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Account.PersonHasOptedOutOfEmail", false));
list = letter.FindByShortName("PersonHomePhone", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Account.PersonHomePhone", false));
list = letter.FindByShortName("PersonLastCURequestDate", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Account.PersonLastCURequestDate", false));
list = letter.FindByShortName("PersonLastCUUpdateDate", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Account.PersonLastCUUpdateDate", false));
list = letter.FindByShortName("PersonMobilePhone", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Account.PersonMobilePhone", false));
list = letter.FindByShortName("PersonOtherPhone", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Account.PersonOtherPhone", false));
list = letter.FindByShortName("Phone", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Account.Phone", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("AdditionalNumber.Phone", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Contact.Phone", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Lead.Phone", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Organization.Phone", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("User.Phone", false));
list = letter.FindByShortName("Pipeline", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("QuantityForecast.Pipeline", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("QuantityForecastHistory.Pipeline", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("RevenueForecast.Pipeline", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("RevenueForecastHistory.Pipeline", false));
list = letter.FindByShortName("PortalType", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("UserRole.PortalType", false));
list = letter.FindByShortName("PositiveRatingCount", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("ContentVersion.PositiveRatingCount", false));
list = letter.FindByShortName("PreferencesEventScheduler", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Organization.PreferencesEventScheduler", false));
list = letter.FindByShortName("PreferencesRequireOpportunityPro ducts", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Organization.PreferencesRequireOpportunityPro ducts", false));
list = letter.FindByShortName("PreferencesVisibleinCSP", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("CaseTeamRole.PreferencesVisibleinCSP", false));
list = letter.FindByShortName("PreviousFireTime", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("CronTrigger.PreviousFireTime", false));
list = letter.FindByShortName("Price", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Asset.Price", false));
list = letter.FindByShortName("Pricebook2", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Opportunity.Pricebook2", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("PricebookEntry.Pricebook2", false));
list = letter.FindByShortName("Pricebook2Id", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Contract.Pricebook2Id", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Opportunity.Pricebook2Id", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("PricebookEntry.Pricebook2Id", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("ServiceContract.Pricebook2Id", false));
list = letter.FindByShortName("PricebookEntry", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("ContractLineItem.PricebookEntry", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpportunityLineItem.PricebookEntry", false));
list = letter.FindByShortName("PricebookEntryId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("ContractLineItem.PricebookEntryId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpportunityLineItem.PriceBookEntryId", false));
list = letter.FindByShortName("PricebookId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Opportunity.PricebookId", false));
list = letter.FindByShortName("PrimaryContactId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("PartnerNetworkConnection.PrimaryContactId", false));
list = letter.FindByShortName("Probability", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Opportunity.Probability", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpportunityHistory.Probability", false));
list = letter.FindByShortName("ProcessInstanceId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("ProcessInstanceHistory.ProcessInstanceId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("ProcessInstanceStep.ProcessInstanceId", false));
list = letter.FindByShortName("Product2Id", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Asset.Product2Id", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("PricebookEntry.Product2Id", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("ProductEntitlementTemplate.Product2Id", false));
list = letter.FindByShortName("ProductId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpportunityLineItem.ProductId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpportunityLineItem.ProductId", false));
list = letter.FindByShortName("Profile", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Name.Profile", false));
list = letter.FindByShortName("ProfileId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Name.ProfileId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("User.ProfileId", false));
list = letter.FindByShortName("PurchaseDate", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Asset.PurchaseDate", false));
letter = All_with_targets.FindByShortName("Q*", false);list = letter.FindByShortName("Quantity", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Asset.Quantity", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("ContractLineItem.Quantity", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpportunityLineItem.Quantity", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpportunityLineItemSchedule.Quantity", false));
list = letter.FindByShortName("QuantityInherited", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("LineitemOverride.QuantityInherited", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpportunityOverride.QuantityInherited", false));
list = letter.FindByShortName("QuestionId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Reply.QuestionId", false));
list = letter.FindByShortName("QueueId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("QueueSobject.QueueId", false));
list = letter.FindByShortName("Quota", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("QuantityForecast.Quota", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("RevenueForecast.Quota", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("RevenueForecastHistory.Quota", false));
letter = All_with_targets.FindByShortName("R*", false);list = letter.FindByShortName("RatingCount", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("ContentVersion.RatingCount", false));
list = letter.FindByShortName("ReceiveInfoEmails", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("User.ReceiveInfoEmails", false));
list = letter.FindByShortName("ReceivesAdminInfoEmails", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Organization.ReceivesAdminInfoEmails", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("User.ReceivesAdminInfoEmails", false));
list = letter.FindByShortName("ReceivesInfoEmails", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Organization.ReceivesInfoEmails", false));
list = letter.FindByShortName("RecordTypeId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Account.RecordTypeId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Campaign.RecordTypeId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("CampaignMember.RecordTypeId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Case.RecordTypeId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Contact.RecordTypeId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("ContentVersion.RecordTypeId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Contract.RecordTypeId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Lead.RecordTypeId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Opportunity.RecordTypeId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Solution.RecordTypeId", false));
list = letter.FindByShortName("RecurrenceActivityId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Event.RecurrenceActivityId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Task.RecurrenceActivityId", false));
list = letter.FindByShortName("RecurrenceDayOfMonth", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Event.RecurrenceDayOfMonth", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Holiday.RecurrenceDayOfMonth", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Task.RecurrenceDayOfMonth", false));
list = letter.FindByShortName("RecurrenceDayOfWeekMask", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Event.RecurrenceDayOfWeekMask", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Holiday.RecurrenceDayOfWeekMask", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Task.RecurrenceDayOfWeekMask", false));
list = letter.FindByShortName("RecurrenceEndDateOnly", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Event.RecurrenceEndDateOnly", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Event.RecurrenceEndDateOnly", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Holiday.RecurrenceEndDateOnly", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Holiday.RecurrenceEndDateOnly", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Task.RecurrenceEndDateOnly", false));
list = letter.FindByShortName("RecurrenceInterval", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Event.RecurrenceInterval", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Holiday.RecurrenceInterval", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Task.RecurrenceInterval", false));
list = letter.FindByShortName("RecurrenceStartDate", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Holiday.RecurrenceStartDate", false));
list = letter.FindByShortName("RecurrenceStartDateOnly", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Task.RecurrenceStartDateOnly", false));
list = letter.FindByShortName("RecurrenceStartDateTime", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Event.RecurrenceStartDateTime", false));
list = letter.FindByShortName("RecurrenceType", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Event.RecurrenceType", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Task.RecurrenceType", false));
list = letter.FindByShortName("RelatedId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Group.RelatedId", false));
list = letter.FindByShortName("RelatedSobjectId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("CategoryData.RelatedSobjectId", false));
list = letter.FindByShortName("RemainingCases", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Entitlement.RemainingCases", false));
list = letter.FindByShortName("ReminderDateTime", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Event.ReminderDateTime", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Task.ReminderDateTime", false));
list = letter.FindByShortName("RemindersSent", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("ProcessInstanceHistory.RemindersSent", false));
list = letter.FindByShortName("RepeatInterval", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("CronTrigger.RepeatInterval", false));
list = letter.FindByShortName("ReportsToId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Contact.ReportsToId", false));
list = letter.FindByShortName("RequireRowSelection", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("WebLink.RequireRowSelection", false));
list = letter.FindByShortName("ResponseDate", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("PartnerNetworkConnection.ResponseDate", false));
list = letter.FindByShortName("RestrictOppTransfer", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Territory.RestrictOppTransfer", false));
list = letter.FindByShortName("Revenue", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpportunityLineItemSchedule.Revenue", false));
list = letter.FindByShortName("RuleID", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("AccountTerritoryAssignmentRuleItem.RuleID", false));
list = letter.FindByShortName("RunAsUserId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("EmailServicesAddress.RunAsUserId", false));
letter = All_with_targets.FindByShortName("S*", false);list = letter.FindByShortName("SaturdayEndTime", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("BusinessHours.SaturdayEndTime", false));
list = letter.FindByShortName("SaturdayStartTime", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("BusinessHours.SaturdayStartTime", false));
list = letter.FindByShortName("ScheduleDate", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpportunityLineItemSchedule.ScheduleDate", false));
list = letter.FindByShortName("ScontrolId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("ScontrolLocalization.ScontrolId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("WebLink.ScontrolId", false));
list = letter.FindByShortName("SelfServiceCaseSubmitRecordTypeId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Organization.SelfServiceCaseSubmitRecordTypeId", false));
list = letter.FindByShortName("SelfServiceEmailSenderAddress", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Organization.SelfServiceEmailSenderAddress", false));
list = letter.FindByShortName("SelfServiceEmailUserOnCaseCreationTemplateId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Organization.SelfServiceEmailUserOnCaseCreationTemplateId", false));
list = letter.FindByShortName("SelfServiceEnabledForResponseRules", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Organization.SelfServiceEnabledForResponseRules", false));
list = letter.FindByShortName("SelfServiceFeatureConfig", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Organization.SelfServiceFeatureConfig", false));
list = letter.FindByShortName("SelfServiceMaxNumSuggestions", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Organization.SelfServiceMaxNumSuggestions", false));
list = letter.FindByShortName("SelfServiceNewCommentCheckedByDe fault", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Organization.SelfServiceNewCommentCheckedByDe fault", false));
list = letter.FindByShortName("SelfServiceNewCommentTemplateId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Organization.SelfServiceNewCommentTemplateId", false));
list = letter.FindByShortName("SelfServiceNewPassTemplateId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Organization.SelfServiceNewPassTemplateId", false));
list = letter.FindByShortName("SelfServiceNewUserTemplateId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Organization.SelfServiceNewUserTemplateId", false));
list = letter.FindByShortName("SelfServicePageHeight", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Organization.SelfServicePageHeight", false));
list = letter.FindByShortName("SelfServicePageWidth", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Organization.SelfServicePageWidth", false));
list = letter.FindByShortName("SelfServiceSolutionCategoryAvailable", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Organization.SelfServiceSolutionCategoryAvailable", false));
list = letter.FindByShortName("SelfServiceSolutionCategorySta rtNodeId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Organization.SelfServiceSolutionCategorySta rtNodeId", false));
list = letter.FindByShortName("SelfServiceWelcomePageConfig", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Organization.SelfServiceWelcomePageConfig", false));
list = letter.FindByShortName("SendClosedTasks", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("PartnerNetworkRecordConnection.SendClosedTasks", false));
list = letter.FindByShortName("SendEmails", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("PartnerNetworkRecordConnection.SendEmails", false));
list = letter.FindByShortName("SendOpenTasks", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("PartnerNetworkRecordConnection.SendOpenTasks", false));
list = letter.FindByShortName("ServiceContractId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("ContractLineItem.ServiceContractId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Entitlement.ServiceContractId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("ServiceContractHistory.ServiceContractId", false));
list = letter.FindByShortName("ServiceDate", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpportunityLineItem.ServiceDate", false));
list = letter.FindByShortName("ShowsLocation", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("WebLink.ShowsLocation", false));
list = letter.FindByShortName("ShowsStatus", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("WebLink.ShowsStatus", false));
list = letter.FindByShortName("SiteId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("SiteHistory.SiteId", false));
list = letter.FindByShortName("SlaStartDate", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Case.SlaStartDate", false));
list = letter.FindByShortName("SolutionId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("CaseSolution.SolutionId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("SolutionHistory.SolutionId", false));
list = letter.FindByShortName("SortOrder", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("AccountTerritoryAssignmentRuleItem.SortOrder", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("CampaignMemberStatus.SortOrder", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("CaseStatus.SortOrder", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("CategoryNode.SortOrder", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("ContractStatus.SortOrder", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Division.SortOrder", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("LeadStatus.SortOrder", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpportunityLineItem.SortOrder", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("PartnerRole.SortOrder", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("SolutionStatus.SortOrder", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("TaskPriority.SortOrder", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("TaskStatus.SortOrder", false));
list = letter.FindByShortName("StageName", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Opportunity.StageName", false));
list = letter.FindByShortName("StartDate", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Campaign.StartDate", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Contract.StartDate", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("ContractLineItem.StartDate", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("DatedConversionRate.StartDate", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Entitlement.StartDate", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("PartnerNetworkRecordConnection.StartDate", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Period.StartDate", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("QuantityForecast.StartDate", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("RevenueForecast.StartDate", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("ServiceContract.StartDate", false));
list = letter.FindByShortName("StartDateTime", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Event.StartDateTime", false));
list = letter.FindByShortName("StartTime", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("CronTrigger.StartTime", false));
list = letter.FindByShortName("StartTimeInMinutes", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Holiday.StartTimeInMinutes", false));
list = letter.FindByShortName("Status", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("ActivityHistory.Status", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Case.Status", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpenActivity.Status", false));
list = letter.FindByShortName("StopStartDate", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Case.StopStartDate", false));
list = letter.FindByShortName("SubscriberId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("EntitySubscription.SubscriberId", false));
list = letter.FindByShortName("Subtotal", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("ContractLineItem.Subtotal", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpportunityLineItem.Subtotal", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("ServiceContract.Subtotal", false));
list = letter.FindByShortName("SundayEndTime", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("BusinessHours.SundayEndTime", false));
list = letter.FindByShortName("SundayStartTime", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("BusinessHours.SundayStartTime", false));
list = letter.FindByShortName("SuperUser", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("SelfServiceUser.SuperUser", false));
list = letter.FindByShortName("SuppliedEmail", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Case.SuppliedEmail", false));
list = letter.FindByShortName("SupportsCaching", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Scontrol.SupportsCaching", false));
list = letter.FindByShortName("SystemModstamp", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("CallCenter.SystemModstamp", false));
letter = All_with_targets.FindByShortName("T*", false);list = letter.FindByShortName("TagDefinitionId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("AccountTag.TagDefinitionId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("AssetTag.TagDefinitionId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("CampaignTag.TagDefinitionId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("CaseTag.TagDefinitionId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("ContactTag.TagDefinitionId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("ContractTag.TagDefinitionId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("DocumentTag.TagDefinitionId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("LeadTag.TagDefinitionId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("NoteTag.TagDefinitionId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpportunityTag.TagDefinitionId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("SolutionTag.TagDefinitionId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("TaskTag.TagDefinitionId", false));
list = letter.FindByShortName("TargetDate", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("CaseMilestone.TargetDate", false));
list = letter.FindByShortName("TargetObjectId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("ProcessInstance.TargetObjectId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("ProcessInstanceHistory.TargetObjectId", false));
list = letter.FindByShortName("TargetResponseInDays", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("CaseMilestone.TargetResponseInDays", false));
list = letter.FindByShortName("TargetResponseInHrs", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("CaseMilestone.TargetResponseInHrs", false));
list = letter.FindByShortName("TargetResponseInMins", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("CaseMilestone.TargetResponseInMins", false));
list = letter.FindByShortName("TaskId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("EmailStatus.TaskId", false));
list = letter.FindByShortName("Tax", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("ServiceContract.Tax", false));
list = letter.FindByShortName("TeamRoleId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("CaseTeamMember.TeamRoleId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("CaseTeamTemplateMember.TeamRoleId", false));
list = letter.FindByShortName("TeamTemplateId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("CaseTeamTemplateRecord.TeamTemplateId", false));
list = letter.FindByShortName("TeamTemplateMemberId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("CaseTeamMember.TeamTemplateMemberId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("CaseTeamTemplateMember.TeamTemplateMemberId", false));
list = letter.FindByShortName("Term", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("EntitlementTemplate.Term", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("ServiceContract.Term", false));
list = letter.FindByShortName("TerritoryId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("AccountTerritoryAssignmentRule.TerritoryId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("RevenueForecast.TerritoryId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("UserTerritory.TerritoryId", false));
list = letter.FindByShortName("ThursdayEndTime", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("BusinessHours.ThursdayEndTime", false));
list = letter.FindByShortName("ThursdayStartTime", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("BusinessHours.ThursdayStartTime", false));
list = letter.FindByShortName("TimesOpened", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("EmailStatus.TimesOpened", false));
list = letter.FindByShortName("TimesUsed", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("EmailTemplate.TimesUsed", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Solution.TimesUsed", false));
list = letter.FindByShortName("ToId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Bookmark.ToId", false));
list = letter.FindByShortName("TotalAmountAllOpportunities", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Campaign.TotalAmountAllOpportunities", false));
list = letter.FindByShortName("TotalAmountAllWonOpportunities", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Campaign.TotalAmountAllWonOpportunities", false));
list = letter.FindByShortName("TotalNumberofContacts", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Campaign.TotalNumberofContacts", false));
list = letter.FindByShortName("TotalNumberofConvertedLeads", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Campaign.TotalNumberofConvertedLeads", false));
list = letter.FindByShortName("TotalNumberofLeads", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Campaign.TotalNumberofLeads", false));
list = letter.FindByShortName("TotalNumberofOpportunties", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Campaign.TotalNumberofOpportunties", false));
list = letter.FindByShortName("TotalNumberofResponses", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Campaign.TotalNumberofResponses", false));
list = letter.FindByShortName("TotalNumberofWonOpportunities", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Campaign.TotalNumberofWonOpportunities", false));
list = letter.FindByShortName("TotalOpportunityQuantity", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Opportunity.TotalOpportunityQuantity", false));
list = letter.FindByShortName("TotalPrice", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("ContractLineItem.TotalPrice", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpportunityLineItem.TotalPrice", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("ServiceContract.TotalPrice", false));
list = letter.FindByShortName("TrialExpirationDate", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Organization.TrialExpirationDate", false));
list = letter.FindByShortName("TuesdayEndTime", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("BusinessHours.TuesdayEndTime", false));
list = letter.FindByShortName("TuesdayStartTime", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("BusinessHours.TuesdayStartTime", false));
list = letter.FindByShortName("Type", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpportunityLineItem.Type", false));
letter = All_with_targets.FindByShortName("U*", false);list = letter.FindByShortName("UnitPrice", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("ContractLineItem.UnitPrice", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpportunityLineItem.UnitPrice", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("PricebookEntry.UnitPrice", false));
list = letter.FindByShortName("UnitPriceInherited", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("LineitemOverride.UnitPriceInherited", false));
list = letter.FindByShortName("Upside", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("QuantityForecast.Upside", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("RevenueForecast.Upside", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("RevenueForecastHistory.Upside", false));
list = letter.FindByShortName("UpsideOverridden", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("RevenueForecastHistory.UpsideOverridden", false));
list = letter.FindByShortName("UpsideOverride", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("QuantityForecast.UpsideOverride", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("RevenueForecast.UpsideOverride", false));
list = letter.FindByShortName("UpVotes", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Reply.UpVotes", false));
list = letter.FindByShortName("UsageEndDate", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Asset.UsageEndDate", false));
list = letter.FindByShortName("useDefaultRule", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Case.useDefaultRule", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Lead.useDefaultRule", false));
list = letter.FindByShortName("UserId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("AccountTeamMember.UserId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpportunityTeamMember.UserId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("UserAccountTeamMember.UserId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("UserPreference.UserId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("UserTeamMember.UserId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("UserTerritory.UserId", false));
list = letter.FindByShortName("UserorGroupId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("AccountOwnerSharingRule.UserorGroupId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("AccountShare.UserOrGroupId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("AccountTerritorySharingRule.UserorGroupId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("CampaignOwnerSharingRule.UserorGroupId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("CampaignShare.UserOrGroupId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("CaseOwnerSharingRule.UserorGroupId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("CaseShare.UserOrGroupId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("ContactOwnerSharingRule.UserorGroupId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("ContactShare.UserOrGroupId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("ForecastShare.UserorGroupId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("GroupMember.UserOrGroupId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("LeadOwnerSharingRule.UserorGroupId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("LeadShare.UserOrGroupId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpportunityOwnerSharingRule.UserorGroupId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("OpportunityShare.UserOrGroupId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("ServiceContractOwnerSharingRule.UserorGroupId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("ServiceContractShare.UserOrGroupId", false));
list = letter.FindByShortName("UserPermissionsCallCenterAutoLogin", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("User.UserPermissionsCallCenterAutoLogin", false));
list = letter.FindByShortName("UserPermissionsMarketingUser", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("User.UserPermissionsMarketingUser", false));
list = letter.FindByShortName("UserPermissionsMobileUser", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("User.UserPermissionsMobileUser", false));
list = letter.FindByShortName("UserPermissionsOfflineUser", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("User.UserPermissionsOfflineUser", false));
list = letter.FindByShortName("UserPermissionsSFContentUser", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("User.UserPermissionsSFContentUser", false));
list = letter.FindByShortName("UserPermissionsWirelessUser", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("User.UserPermissionsWirelessUser", false));
list = letter.FindByShortName("UserPreferencesActivityRemindersPopup", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("User.UserPreferencesActivityRemindersPopup", false));
list = letter.FindByShortName("UserPreferencesApexPagesDeveloperMode", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("User.UserPreferencesApexPagesDeveloperMode", false));
list = letter.FindByShortName("UserPreferencesDisableAutoSubForFeeds", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("User.UserPreferencesDisableAutoSubForFeeds", false));
list = letter.FindByShortName("UserPreferencesEventRemindersCheckboxDefault", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("User.UserPreferencesEventRemindersCheckboxDefault", false));
list = letter.FindByShortName("UserPreferencesReminderSoundOff", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("User.UserPreferencesReminderSoundOff", false));
list = letter.FindByShortName("UserPreferencesTaskRemindersCheckboxDefault", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("User.UserPreferencesTaskRemindersCheckboxDefault", false));
list = letter.FindByShortName("UserRoleId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("ForecastShare.UserRoleId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Name.UserRoleId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("User.UserRoleId", false));
list = letter.FindByShortName("UserType", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("User.UserType", false));
list = letter.FindByShortName("UsesStartDateAsFiscalYearName", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Organization.UsesStartDateAsFiscalYearName", false));
list = letter.FindByShortName("UseStandardPrice", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("PricebookEntry.UseStandardPrice", false));
list = letter.FindByShortName("UsesWebToCase", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Organization.UsesWebToCase", false));
list = letter.FindByShortName("UsesWebToLead", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Organization.UsesWebToLead", false));
letter = All_with_targets.FindByShortName("V*", false);list = letter.FindByShortName("Version", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("CallCenter.Version", false));
list = letter.FindByShortName("VoteScore", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Idea.VoteScore", false));
list = letter.FindByShortName("VoteTotal", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Idea.VoteTotal", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Reply.VoteTotal", false));
letter = All_with_targets.FindByShortName("W*", false);list = letter.FindByShortName("WebLinkId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("WebLinkLocalization.WebLinkId", false));
list = letter.FindByShortName("WebToCaseAssignedEmailTemplateId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Organization.WebToCaseAssignedEmailTemplateId", false));
list = letter.FindByShortName("WebToCaseCreatedEmailTemplateId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Organization.WebToCaseCreatedEmailTemplateId", false));
list = letter.FindByShortName("WebToCaseDefaultCreatorId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("Organization.WebToCaseDefaultCreatorId", false));
list = letter.FindByShortName("WednesdayEndTime", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("BusinessHours.WednesdayEndTime", false));
list = letter.FindByShortName("WednesdayStartTime", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("BusinessHours.WednesdayStartTime", false));
list = letter.FindByShortName("WhatId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("ActivityHistory.WhatId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Event.WhatId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Task.WhatId", false));
list = letter.FindByShortName("WhoId", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("ActivityHistory.WhoId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("EmailStatus.WhoId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Event.WhoId", false));
standardObjectsSanitizers.Add(list.FindByMemberAccess("Task.WhoId", false));
list = letter.FindByShortName("Width", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("WebLink.Width", false));
list = letter.FindByShortName("WirelessEmail", false);
standardObjectsSanitizers.Add(list.FindByMemberAccess("User.WirelessEmail", false));

result.Add(standardObjectsSanitizers);