CxList methods = Find_Methods();

string[] methodsNames = {
	"__wcserror_s",
	"_cgets_s",
	"_cgetws_s",
	"_chsize_s",
	"_controlfp_s",
	"_cprintf_s",
	"_cscanf_s",
	"_cscanf_s_l",
	"_ctime32_s",
	"_ctime64_s",
	"_cwscanf_s",
	"_cwscanf_s_l",
	"_ecvt_s",
	"_fcvt_s",
	"_fscanf_s_l",
	"_fwscanf_s_l",
	"_gcvt_s",
	"_getws_s",
	"_gmtime32_s",
	"_gmtime64_s",
	"_gmtime_s",
	"_i64toa_s",
	"_i64tow_s",
	"_itoa_s",
	"_itow_s",
	"_lfind_s",
	"_localtime32_s",
	"_localtime64_s",
	"_localtime_s",
	"_lsearch_s",
	"_ltoa_s",
	"_ltow_s",
	"_mbccpy_s",
	"_mbccpy_s_l",
	"_mbscat_s",
	"_mbscpy_s",
	"_mbslwr_s",
	"_mbslwr_s_l",
	"_mbsnbcat_s",
	"_mbsnbcat_s_l",
	"_mbsnbcpy_s",
	"_mbsnbcpy_s_l",
	"_mbsnbset_s",
	"_mbsnbset_s_l",
	"_mbsncat_s",
	"_mbsncat_s_l",
	"_mbsncpy_s",
	"_mbsncpy_s_l",
	"_mbsnset_s",
	"_mbsnset_s_l",
	"_mbsset_s",
	"_mbsset_s_l",
	"_mbstok_s",
	"_mbstok_s_l",
	"_mbstowcs_s_l",
	"_mbsupr_s",
	"_mbsupr_s_l",
	"_mktemp_s",
	"_putenv_s",
	"_scanf_s_l",
	"_searchenv_s",
	"_snprintf",
	"_snprintf_s",
	"_snprintf_s_l",
	"_snscanf_s",
	"_snscanf_s_l",
	"_snwprintf_s",
	"_snwprintf_s_l",
	"_snwscanf_s",
	"_snwscanf_s_l",
	"_sopen_s",
	"_splitpath_s",
	"_sprintf_s_l",
	"_sscanf_s_l",
	"_strdate_s",
	"_strerror_s",
	"_strlwr_s",
	"_strlwr_s_l",
	"_strncat_s_l",
	"_strncpy_s_l",
	"_strnset_s",
	"_strnset_s_l",
	"_strset_s",
	"_strset_s_l",
	"_strtime_s",
	"_strtok_s_l",
	"_strupr_s",
	"_strupr_s_l",
	"_swprintf_s_l",
	"_swscanf_s_l",
	"_ui64toa_s",
	"_ui64tow_s",
	"_ultoa_s",
	"_ultow_s",
	"_umask_s",
	"_vsnprintf_s",
	"_vsnprintf_s_l",
	"_vsnwprintf_s",
	"_vsnwprintf_s_l",
	"_vsprintf_s_l",
	"_vswprintf_s_l",
	"_wasctime_s",
	"_wcserror_s",
	"_wcslwr_s",
	"_wcslwr_s_l",
	"_wcsncat_s_l",
	"_wcsncpy_s_l",
	"_wcsnset_s",
	"_wcsnset_s_l",
	"_wcsset_s",
	"_wcsset_s_l",
	"_wcstok_s_l",
	"_wcstombs_s_l",
	"_wcsupr_s",
	"_wcsupr_s_l",
	"_wctime32_s",
	"_wctime64_s",
	"_wctime_s",
	"_wctomb_s_l",
	"_wfopen_s",
	"_wfreopen_s",
	"_wgetenv_s",
	"_wmktemp_s",
	"_wscanf_s",
	"_wscanf_s_l",
	"_wsearchenv_s",
	"_wsopen_s",
	"_wsplitpath_s",
	"_wstrdate_s",
	"_wstrtime_s",
	"_wtmpnam_s",

	"asctime_s",
	"brk",
	"calloc",
	"chdir",
	"chown",
	"chroot",
	"close",
	"crypt",
	"ctime_s",
	"encrypt",
	"fchown",
	"fgets",
	"fopen",
	"fopen_s",
	"freopen",
	"freopen_s",
	"fscanf",
	"fscanf_s",
	"fwscanf",
	"fwscanf_s",
	"getenv",
	"getenv_s",
	"getpwuid",
	"gets",
	"gets_s",
	"HeapAlloc",
	"HeapCreate",
	"HeapFree",
	"HeapReAlloc",
	"lchown",
	"lockf",
	"malloc",
	"mbsrtowcs",
	"mbsrtowcs_s",
	"mbstowcs",
	"mbstowcs_s",
	"memalign",
	"memcpy_s",
	"memmove_s",
	"mkstemp",
	"pread",
	"pwrite",
	"read",
	"readlink",
	"readv",
	"realloc",
	"RegOpenKey",
	"RegQueryValue",
	"remove",
	"rmdir",
	"sbrk",
	"scanf",
	"scanf_s",
	"snprintf",
	"sprintf",
	"sprintf_s",
	"sscanf",
	"sscanf_s",
	"strcat_s",
	"strcpy_s",
	"strdup",
	"strerror_s",
	"strncat_s",
	"strncpy_s",
	"strtok",
	"strtok_s",
	"swprintf",
	"swprintf_s",
	"swscanf",
	"swscanf_s",
	"tmpfile",
	"tmpfile_s",
	"tmpnam",
	"tmpnam_r",
	"valloc",
	"vsnprintf",
	"vsnprintf_s",
	"vsprintf",
	"vsprintf_s",
	"vswprintf",
	"vswprintf_s",
	"wcrtomb_s",
	"wcscat_s",
	"wcscpy_s",
	"wcsncat_s",
	"wcsncpy_s",
	"wcsrtombs",
	"wcsrtombs_s",
	"wcstok",
	"wcstok_s",
	"wcstombs",
	"wcstombs_s",
	"wctomb",
	"wctomb_s",
	"wmemcpy_s",
	"wmemmove",
	"wmemmove_s",
	"write",
	"writev",
	"width"};

CxList methodsWithReturnValue = methods.FindByShortNames(new List<string>(methodsNames));
/* Remove functions that were badly caught by the previous list */
CxList voidMethodInvokes = methodsWithReturnValue.FindByMemberAccess("ifstream.open");
voidMethodInvokes.Add(methodsWithReturnValue.FindByMemberAccess("ifstream.close"));
voidMethodInvokes.Add(methodsWithReturnValue.FindByMemberAccess("basic_ifstream.open"));
voidMethodInvokes.Add(methodsWithReturnValue.FindByMemberAccess("basic_ifstream.close"));
voidMethodInvokes.Add(methodsWithReturnValue.FindByMemberAccess("ofstream.open"));
voidMethodInvokes.Add(methodsWithReturnValue.FindByMemberAccess("ofstream.close"));
voidMethodInvokes.Add(methodsWithReturnValue.FindByMemberAccess("basic_ofstream.open"));
voidMethodInvokes.Add(methodsWithReturnValue.FindByMemberAccess("basic_ofstream.close"));
voidMethodInvokes.Add(methodsWithReturnValue.FindByMemberAccess("QFile.close"));
voidMethodInvokes.Add(methodsWithReturnValue.FindByMemberAccess("cin.width"));

methodsWithReturnValue -= voidMethodInvokes;

CxList methodsWithReturnValueDefinitions = All.FindDefinition(methodsWithReturnValue);
CxList voidMethods = methodsWithReturnValueDefinitions.FindByReturnType("void", false);

// remove methods whose definition is found and the return type is void
result = methodsWithReturnValue - All.FindAllReferences(voidMethods);